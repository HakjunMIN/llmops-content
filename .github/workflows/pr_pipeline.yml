name: PR Pipeline

on:
  pull_request:
    branches:
      - develop
      
jobs:

  # unit-testing:
  #   if: ${{ github.repository != 'Azure/llmops-project-template' }}    
  #   runs-on: ubuntu-latest
  #   environment: dev
  #   steps:       
  #     - uses: actions/checkout@v4
  #     - name: Setup Python 
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: 3.11
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install pytest
  #         pip install -r requirements.txt
  #     - name: Test with pytest
  #       env:
  #         PYTHONPATH: src
  #         PYTHONWARNINGS: ignore::DeprecationWarning,ignore::RemovedInMarshmallow4Warning
  #       run: pytest tests/ --doctest-modules --junitxml=junit/test-results-3.11.xml
  #     - name: Upload pytest test results
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: pytest-results-3.11
  #         path: junit/test-results-3.11.xml
  #       if: always()

  # static-code-analysis:
  #   needs: unit-testing
  #   runs-on: ubuntu-latest
  #   environment: dev
  #   steps:
  #     - name: Finds anti-patterns in code
  #       run: |
  #         echo "Run Pylint"
  #     - name: Run security checks
  #       run: |
  #         echo "Run Bandit"

  
  get-env-job:
    if: ${{ github.repository != 'Azure/llmops-project-template' }}
    runs-on: ubuntu-latest
    environment: dev
    # needs: [unit-testing, static-code-analysis]
    outputs:
      AZURE_RESOURCE_GROUP: ${{ steps.get-env.outputs.AZURE_RESOURCE_GROUP }}
      AZURE_OPENAI_NAME: ${{ steps.get-env.outputs.AZURE_OPENAI_NAME }}
      AZURE_OPENAI_ENDPOINT: ${{ steps.get-env.outputs.AZURE_OPENAI_ENDPOINT }}    
      AZURE_SEARCH_ENDPOINT: ${{ steps.get-env.outputs.AZURE_SEARCH_ENDPOINT }}
      AZURE_OPENAI_EMBEDDING_DEPLOYMENT: ${{ steps.get-env.outputs.AZURE_OPENAI_EMBEDDING_DEPLOYMENT }}
      AZURE_OPENAI_CHAT_DEPLOYMENT: ${{ steps.get-env.outputs.AZURE_OPENAI_CHAT_DEPLOYMENT }}
      AZURE_OPENAI_EMBEDDING_MODEL: ${{ steps.get-env.outputs.AZURE_OPENAI_EMBEDDING_MODEL }}
      AZURE_OPENAI_API_VERSION: ${{ steps.get-env.outputs.AZURE_OPENAI_API_VERSION }}
    steps: 
      - uses: actions/checkout@v4
      - name: Get environment variables
        uses: ./.github/actions/get-env
        id: get-env
        with:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
          AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}
          AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
          AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
          MANUAL_PROVISIONING: ${{ vars.MANUAL_PROVISIONING }}
          AZURE_DEPLOY_APP_SERVICE: false
        env:
          AZUREAI_PROJECT_NAME: ${{ vars.AZUREAI_PROJECT_NAME }}
          AZURE_APP_SERVICE_NAME: ${{ vars.AZURE_APP_SERVICE_NAME }}
          AZURE_APP_SERVICE_PLAN_NAME: ${{ vars.AZURE_APP_SERVICE_PLAN_NAME }}
          AZURE_CONTAINER_REGISTRY_NAME: ${{ vars.AZURE_CONTAINER_REGISTRY_NAME }}
          AZURE_CONTAINER_REPOSITORY_NAME: ${{ vars.AZURE_CONTAINER_REPOSITORY_NAME }}
          AZURE_OPENAI_API_VERSION: ${{ vars.AZURE_OPENAI_API_VERSION }}
          AZURE_OPENAI_CHAT_DEPLOYMENT: ${{ vars.AZURE_OPENAI_CHAT_DEPLOYMENT }}
          AZURE_OPENAI_EMBEDDING_DEPLOYMENT: ${{ vars.AZURE_OPENAI_EMBEDDING_DEPLOYMENT }}
          AZURE_OPENAI_EMBEDDING_MODEL: ${{ vars.AZURE_OPENAI_EMBEDDING_MODEL }}
          AZURE_OPENAI_ENDPOINT: ${{ vars.AZURE_OPENAI_ENDPOINT }}
          AZURE_OPENAI_NAME: ${{ vars.AZURE_OPENAI_NAME }}
          AZURE_RESOURCE_GROUP: ${{ vars.AZURE_RESOURCE_GROUP }}
          AZUREAI_RESOURCE_GROUP: ${{ vars.AZURE_RESOURCE_GROUP }}          
          AZURE_SEARCH_ENDPOINT: ${{ vars.AZURE_SEARCH_ENDPOINT }}
          LOAD_AZURE_SEARCH_SAMPLE_DATA: ${{ vars.LOAD_AZURE_SEARCH_SAMPLE_DATA }}
          AZURE_SEARCH_NAME: ${{ vars.AZURE_SEARCH_NAME }}
          PROMPTFLOW_SERVING_ENGINE: ${{ vars.PROMPTFLOW_SERVING_ENGINE }}
          PROMPTFLOW_WORKER_NUM: ${{ vars.PROMPTFLOW_WORKER_NUM }}
          AZURE_PRINCIPAL_ID: ${{ vars.AZURE_PRINCIPAL_ID }}
          AZUREAI_HUB_NAME: ${{ vars.AZUREAI_HUB_NAME }}
          AZURE_APP_INSIGHTS_NAME: ${{ vars.AZURE_APP_INSIGHTS_NAME }}
          AZURE_KEY_VAULT_NAME: ${{ vars.AZURE_KEY_VAULT_NAME }}
          AZURE_LOG_ANALYTICS_NAME: ${{ vars.AZURE_LOG_ANALYTICS_NAME }}
          AZURE_STORAGE_ACCOUNT_NAME: ${{ vars.AZURE_STORAGE_ACCOUNT_NAME }}

  evaluate-flow:
    needs: [get-env-job]
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Login to Azure CLI
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}           

      - name: AI-Based prompt evaluation
        env: 
          AZURE_RESOURCE_GROUP: ${{needs.get-env-job.outputs.AZURE_RESOURCE_GROUP}}
          AZURE_OPENAI_NAME: ${{needs.get-env-job.outputs.AZURE_OPENAI_NAME}}
          AZURE_OPENAI_ENDPOINT: ${{needs.get-env-job.outputs.AZURE_OPENAI_ENDPOINT}}
          AZURE_SEARCH_ENDPOINT: ${{needs.get-env-job.outputs.AZURE_SEARCH_ENDPOINT}}
          AZURE_OPENAI_EMBEDDING_DEPLOYMENT: ${{needs.get-env-job.outputs.AZURE_OPENAI_EMBEDDING_DEPLOYMENT}}
          AZURE_OPENAI_CHAT_DEPLOYMENT: ${{needs.get-env-job.outputs.AZURE_OPENAI_CHAT_DEPLOYMENT}}
          AZURE_OPENAI_EMBEDDING_MODEL: ${{needs.get-env-job.outputs.AZURE_OPENAI_EMBEDDING_MODEL}}
          AZURE_OPENAI_API_VERSION: ${{needs.get-env-job.outputs.AZURE_OPENAI_API_VERSION}}    
        run: |
          echo "Run AI-Based prompt evaluation"
          export AZURE_OPENAI_API_KEY=$(az cognitiveservices account keys list --resource-group ${AZURE_RESOURCE_GROUP} --name ${AZURE_OPENAI_NAME} --query "key1" --output tsv)
          python evaluations/prompty_eval.py
        shell: bash

      - name: Upload evaluation results
        uses: actions/upload-artifact@v4
        with:
            name: prompt-eval-results
            path: prompty-answer-score-eval.xlsx